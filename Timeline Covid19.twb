<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='owid-covid-data' inline='true' name='federated.0qp51v80osefns13riihe18kd6x3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.0owniwk0aswp7x1fe9wds1jcjwmx'>
            <connection class='textscan' directory='D:/GRIP' filename='owid-covid-data.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0owniwk0aswp7x1fe9wds1jcjwmx' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='string' name='new_tests' ordinal='16' />
            <column datatype='string' name='total_tests' ordinal='17' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
            <column datatype='string' name='new_tests_smoothed' ordinal='20' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
            <column datatype='string' name='tests_per_case' ordinal='22' />
            <column datatype='string' name='positive_rate' ordinal='23' />
            <column datatype='string' name='tests_units' ordinal='24' />
            <column datatype='real' name='stringency_index' ordinal='25' />
            <column datatype='real' name='population' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='real' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='real' name='female_smokers' ordinal='35' />
            <column datatype='real' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0owniwk0aswp7x1fe9wds1jcjwmx' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='string' name='new_tests' ordinal='16' />
            <column datatype='string' name='total_tests' ordinal='17' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
            <column datatype='string' name='new_tests_smoothed' ordinal='20' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
            <column datatype='string' name='tests_per_case' ordinal='22' />
            <column datatype='string' name='positive_rate' ordinal='23' />
            <column datatype='string' name='tests_units' ordinal='24' />
            <column datatype='real' name='stringency_index' ordinal='25' />
            <column datatype='real' name='population' ordinal='26' />
            <column datatype='real' name='population_density' ordinal='27' />
            <column datatype='real' name='median_age' ordinal='28' />
            <column datatype='real' name='aged_65_older' ordinal='29' />
            <column datatype='real' name='aged_70_older' ordinal='30' />
            <column datatype='real' name='gdp_per_capita' ordinal='31' />
            <column datatype='real' name='extreme_poverty' ordinal='32' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
            <column datatype='real' name='diabetes_prevalence' ordinal='34' />
            <column datatype='real' name='female_smokers' ordinal='35' />
            <column datatype='real' name='male_smokers' ordinal='36' />
            <column datatype='real' name='handwashing_facilities' ordinal='37' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
            <column datatype='real' name='life_expectancy' ordinal='39' />
            <column datatype='real' name='human_development_index' ordinal='40' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%deaths' datatype='real' name='[Calculation_370702582657970176]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([total_deaths])/SUM([total_cases]))*100' />
      </column>
      <column caption='%cases' datatype='real' name='[Calculation_370702582659592193]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([new_cases])/SUM([total_cases]))*100' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data.csv' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column aggregate-role-from='[location]' caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='string' name='[new_tests_smoothed]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed Per Thousand' datatype='string' name='[new_tests_smoothed_per_thousand]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='string' name='[positive_rate]' role='dimension' type='nominal' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='string' name='[tests_per_case]' role='dimension' type='nominal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='string' name='[total_tests]' role='dimension' type='nominal' />
      <column caption='Total Tests Per Thousand' datatype='string' name='[total_tests_per_thousand]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_370702582657970176]' derivation='User' name='[usr:Calculation_370702582657970176:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_370702582659592193]' derivation='User' name='[usr:Calculation_370702582659592193:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Continent, Location'>
          <field>[continent]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='red_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#be183a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#c51e3b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ca223c'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ce243c'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#da323f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#de3540'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e03941'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e64345'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e74445'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e84646'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#e94846'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e94947'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f26351'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f26552'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f26653'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f36755'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f36856'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f46e5a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f46f5b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f4705c'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f5715e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f5725f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f57460'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f67662'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f67762'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f67863'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f77c66'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f88069'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f8826c'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f98770'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fa8b73'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fa8c74'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fa8d75'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fa8d77'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fa8e78'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fb937e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fc9c88'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fc9e8c'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fca291'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fda392'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fda594'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#fda695'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#fda796'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#fda999'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fdab9b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#feafa0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#feb0a1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#feb1a2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#feb5a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#feb6a8'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#feb7a9'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#febaad'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#febbae'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#febcaf'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#febdb0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582657970176:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582659592193:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='owid-covid-data.csv' id='owid-covid-data.csv_C2C9497BA1D44C4F80B57242C94A07C3'>
            <properties context=''>
              <relation connection='textscan.0owniwk0aswp7x1fe9wds1jcjwmx' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='string' name='new_tests' ordinal='16' />
                  <column datatype='string' name='total_tests' ordinal='17' />
                  <column datatype='string' name='total_tests_per_thousand' ordinal='18' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='19' />
                  <column datatype='string' name='new_tests_smoothed' ordinal='20' />
                  <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='21' />
                  <column datatype='string' name='tests_per_case' ordinal='22' />
                  <column datatype='string' name='positive_rate' ordinal='23' />
                  <column datatype='string' name='tests_units' ordinal='24' />
                  <column datatype='real' name='stringency_index' ordinal='25' />
                  <column datatype='real' name='population' ordinal='26' />
                  <column datatype='real' name='population_density' ordinal='27' />
                  <column datatype='real' name='median_age' ordinal='28' />
                  <column datatype='real' name='aged_65_older' ordinal='29' />
                  <column datatype='real' name='aged_70_older' ordinal='30' />
                  <column datatype='real' name='gdp_per_capita' ordinal='31' />
                  <column datatype='real' name='extreme_poverty' ordinal='32' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='33' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='34' />
                  <column datatype='real' name='female_smokers' ordinal='35' />
                  <column datatype='real' name='male_smokers' ordinal='36' />
                  <column datatype='real' name='handwashing_facilities' ordinal='37' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='38' />
                  <column datatype='real' name='life_expectancy' ordinal='39' />
                  <column datatype='real' name='human_development_index' ordinal='40' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='New cases and New Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0qp51v80osefns13riihe18kd6x3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qp51v80osefns13riihe18kd6x3'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk] + [federated.0qp51v80osefns13riihe18kd6x3].[sum:new_deaths:qk])</rows>
        <cols>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{80453A41-024C-491D-B37A-BB9E231ED452}' />
    </worksheet>
    <worksheet name='Percentage comparision of cases vs deaths and total deaths vs total cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0qp51v80osefns13riihe18kd6x3' />
          </datasources>
          <datasource-dependencies datasource='federated.0qp51v80osefns13riihe18kd6x3'>
            <column caption='%deaths' datatype='real' name='[Calculation_370702582657970176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([total_deaths])/SUM([total_cases]))*100' />
            </column>
            <column caption='%cases' datatype='real' name='[Calculation_370702582659592193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([new_cases])/SUM([total_cases]))*100' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_370702582657970176]' derivation='User' name='[usr:Calculation_370702582657970176:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_370702582659592193]' derivation='User' name='[usr:Calculation_370702582659592193:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:ok]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[twk:date:ok]' />
              <groupfilter function='member' level='[twk:date:ok]' member='#2019-12-29 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:ok]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582657970176:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582657970176:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582659592193:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582659592193:qk] + ([federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582657970176:qk] + ([federated.0qp51v80osefns13riihe18kd6x3].[sum:total_deaths:qk] + [federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk])))</rows>
        <cols>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>%cases: </run>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582659592193:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582659592193:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582659592193:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-22 00:00:00#</value>
                    <value>10.485173671978352</value>
                    <value>&quot;[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582659592193:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='81' y='-137' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>%deaths: </run>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582657970176:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582657970176:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582657970176:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-07 00:00:00#</value>
                    <value>5.6899838536292897</value>
                    <value>&quot;[federated.0qp51v80osefns13riihe18kd6x3].[usr:Calculation_370702582657970176:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='117' y='-79' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Total Deaths: </run>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_deaths:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>6654699.0</value>
                    <value>#2020-06-21 00:00:00#</value>
                    <value>&quot;[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_deaths:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-149' y='-137' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Total Cases: </run>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>209576162.0</value>
                    <value>#2020-07-19 00:00:00#</value>
                    <value>&quot;[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-59' y='-223' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{DC1816D9-B1B2-419A-8F34-4FC68D1EFCA1}' />
    </worksheet>
    <worksheet name='Percentage distribution of confirmed cases of each country'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0qp51v80osefns13riihe18kd6x3' />
          </datasources>
          <datasource-dependencies datasource='federated.0qp51v80osefns13riihe18kd6x3'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[pcto:sum:total_cases:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='%null%' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' />
              <wedge-size column='[federated.0qp51v80osefns13riihe18kd6x3].[pcto:sum:total_cases:qk]' />
              <size column='[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]>  <[federated.0qp51v80osefns13riihe18kd6x3].[pcto:sum:total_cases:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[pcto:sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;United States&quot;</value>
                    <value>629465152.0</value>
                    <value>0.24560561755982746</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='1' y='-85' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]>]]></run>
              <run fontcolor='#787878'>Æ  </run>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[pcto:sum:total_cases:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[pcto:sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Brazil&quot;</value>
                    <value>349442916.0</value>
                    <value>0.1363461391204813</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]>  <[federated.0qp51v80osefns13riihe18kd6x3].[pcto:sum:total_cases:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]</field>
                      <field>[federated.0qp51v80osefns13riihe18kd6x3].[pcto:sum:total_cases:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;India&quot;</value>
                    <value>301239676.0</value>
                    <value>0.1175381296683797</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='129' y='10' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{E62CC717-40BD-4ED4-93C1-E7EC55DF7DAE}' />
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0qp51v80osefns13riihe18kd6x3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qp51v80osefns13riihe18kd6x3'>
            <column aggregate-role-from='[location]' caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_tests]' derivation='None' name='[none:new_tests:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qp51v80osefns13riihe18kd6x3].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0qp51v80osefns13riihe18kd6x3].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0qp51v80osefns13riihe18kd6x3].[tdy:date:qk]' included-values='in-range'>
            <min>#2019-12-31 00:00:00#</min>
            <max>#2020-10-04 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[tdy:date:qk]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[none:continent:nk]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[Latitude (generated)]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qp51v80osefns13riihe18kd6x3].[Longitude (generated)]' field-type='quantitative' max='25392413.050207864' min='-6510831.1558708819' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0qp51v80osefns13riihe18kd6x3].[Latitude (generated)]' field-type='quantitative' max='11871660.683118923' min='-6358765.3924610186' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' max='200000.0' min='-8261.0' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' />
              <lod column='[federated.0qp51v80osefns13riihe18kd6x3].[none:continent:nk]' />
              <lod column='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' />
              <lod column='[federated.0qp51v80osefns13riihe18kd6x3].[none:new_tests:nk]' />
              <geometry column='[federated.0qp51v80osefns13riihe18kd6x3].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qp51v80osefns13riihe18kd6x3].[Latitude (generated)]</rows>
        <cols>[federated.0qp51v80osefns13riihe18kd6x3].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{AF861746-A361-45C8-A56B-6FEB28C6B117}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0qp51v80osefns13riihe18kd6x3' />
          </datasources>
          <datasource-dependencies datasource='federated.0qp51v80osefns13riihe18kd6x3'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:ok]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[twk:date:ok]' />
              <groupfilter function='member' level='[twk:date:ok]' member='#2019-12-29 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:ok]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qp51v80osefns13riihe18kd6x3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]</rows>
        <cols>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:ok]</cols>
      </table>
      <simple-id uuid='{D40EA150-386F-4210-B6D3-0BE7D18EFE0A}' />
    </worksheet>
    <worksheet name='Timeline series Asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0qp51v80osefns13riihe18kd6x3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qp51v80osefns13riihe18kd6x3'>
            <column aggregate-role-from='[location]' caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qp51v80osefns13riihe18kd6x3].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0qp51v80osefns13riihe18kd6x3].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0qp51v80osefns13riihe18kd6x3].[yr:date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='member' level='[yr:date:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[yr:date:ok]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[none:continent:nk]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[Latitude (generated)]</column>
            <column>[federated.0qp51v80osefns13riihe18kd6x3].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qp51v80osefns13riihe18kd6x3].[Longitude (generated)]' field-type='quantitative' max='23364402.505616795' min='-5861417.9482009895' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0qp51v80osefns13riihe18kd6x3].[Latitude (generated)]' field-type='quantitative' max='7731616.5791465854' min='-1365744.0354118522' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' max='20000.0' min='-8261.0' num-steps='28' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0qp51v80osefns13riihe18kd6x3].[none:continent:nk]' />
              <lod column='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' />
              <color column='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' />
              <geometry column='[federated.0qp51v80osefns13riihe18kd6x3].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Continent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[none:continent:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0qp51v80osefns13riihe18kd6x3].[Latitude (generated)]</rows>
        <cols>[federated.0qp51v80osefns13riihe18kd6x3].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{ECD0792C-BE65-4E25-8B56-82DE504FDEC6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid - 19 Asia Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='22' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='25' param='vert' w='99000' x='500' y='889'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4556' id='26' w='99000' x='500' y='889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='93666' id='23' w='99000' x='500' y='5445' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='50889' id='3' name='Timeline series Asia' w='84563' x='1125' y='6778' />
        <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='12222' id='9' name='Timeline series Asia' synchronized='1' w='12125' x='87563' y='9889' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8444' id='8' name='Timeline series Asia' pane-specification-id='0' param='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' w='12063' x='87563' y='667' />
        <zone h='33333' id='10' name='Percentage distribution of confirmed cases of each country' w='36375' x='1188' y='60444' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='49778' id='15' name='Percentage distribution of confirmed cases of each country' pane-specification-id='0' param='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' w='12063' x='87563' y='23000' />
        <zone h='33333' id='16' name='Percentage comparision of cases vs deaths and total deaths vs total cases' w='36625' x='49125' y='60667' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10889' id='21' name='Percentage comparision of cases vs deaths and total deaths vs total cases' pane-specification-id='5' param='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]' w='12000' x='87563' y='73889' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='30' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='29' param='vert' w='99000' x='500' y='889'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4556' id='26' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50889' id='3' is-fixed='true' name='Timeline series Asia' w='84563' x='1125' y='6778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8444' id='8' name='Timeline series Asia' pane-specification-id='0' param='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' w='12063' x='87563' y='667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='10' is-fixed='true' name='Percentage distribution of confirmed cases of each country' w='36375' x='1188' y='60444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='49778' id='15' name='Percentage distribution of confirmed cases of each country' pane-specification-id='0' param='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' w='12063' x='87563' y='23000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='16' is-fixed='true' name='Percentage comparision of cases vs deaths and total deaths vs total cases' w='36625' x='49125' y='60667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10889' id='21' name='Percentage comparision of cases vs deaths and total deaths vs total cases' pane-specification-id='5' param='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]' w='12000' x='87563' y='73889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='12222' id='9' name='Timeline series Asia' synchronized='1' w='12125' x='87563' y='9889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A7FA55D2-4E53-4908-A49F-86B408AADED3}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Timeline series Asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-10-04 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:continent:nk]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[qr:date:ok]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[tdy:date:ok]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6B559E50-8A10-4CE6-8DA5-53EC76D509A6}' />
    </window>
    <window class='worksheet' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qp51v80osefns13riihe18kd6x3].[sum:new_cases:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-08-16 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[attr:date:ok]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:continent:nk]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[qr:date:ok]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[tdy:date:ok]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{216ADB19-349C-4A30-BB45-A9D02ED3537B}' />
    </window>
    <window class='worksheet' name='New cases and New Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:new_tests:nk]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:positive_rate:nk]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:total_tests:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69A50263-2C76-489D-B223-5F8658D14C4C}' />
    </window>
    <window class='worksheet' name='Percentage distribution of confirmed cases of each country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0qp51v80osefns13riihe18kd6x3].[sum:total_cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9AA8C857-FC52-4F6B-8676-5E8DD2055BF8}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:ok]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[twk:date:qk]</field>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{240DED1C-C9E0-41B0-95D8-61F3746D9F3D}' />
    </window>
    <window class='worksheet' name='Percentage comparision of cases vs deaths and total deaths vs total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0qp51v80osefns13riihe18kd6x3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qp51v80osefns13riihe18kd6x3].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{177F2B96-8D85-45AB-8178-77F77AFB2A1F}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid - 19 Asia Analysis'>
      <viewpoints>
        <viewpoint name='Percentage comparision of cases vs deaths and total deaths vs total cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percentage distribution of confirmed cases of each country'>
          <zoom type='entire-view' />
          <highlight field='[federated.0qp51v80osefns13riihe18kd6x3].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Timeline series Asia'>
          <current-page>
            <multibucket>
              <bucket>#2020-03-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{597F8BF6-36F2-400A-A6E0-65C56C2F34A9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid - 19 Asia Analysis' width='192'>
      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
      sQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='New cases and New Deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5AcV57f+cnM8r7LtvcO3hIgQSwJmnE7nOFoZiekXZ20MnFxpz+kk3Qn
      F7qL2JB0+kMXoZB0utOe7J1uFXva1c7sjsjhcIbkDAEQIAjvge5Ge99d3ldWZt4fhXrVRQDk
      wDTQQ+Y3gkHUrzPzvcz3fu9n3/tJhmEYmDDxJYX8rDtgwsSzhMkAJr7UMBnAxJcalvo/stks
      T9Ic0HUdWTb5y8TWhvSoRrCmllleSxHyOZhfS+NzWAhEY6wsrdDV2U4mk8Hn8z3p/pow8UTx
      yEu0rFjB0FhLZmixG6xnsyzOTLMcTz/J/pkwsal4ZAaoVoosLsyjaVUW4nmCgRYKxRJtEf+T
      7J8JE5uKR1aBPg8bVaBisYjT6dyMZkyYeCxsqpWqqiq///u/z+/93u+Ry+U2sykTJh4Jm8oA
      FouF1157DbfbjcPh2MymTJh4JGwqA1SrVT788EOy2Syqqm5mUyZMPBI2lQEURaG3txeHw4Gi
      KJvZlAkTj4RNZYBKpcLU1BSjo6OMj49vZlMmTDwSNt0LVKlUUBSF6elpBgYGgFqUWNM0LBYL
      kiRtRvMmTPxSsHz+JY+OSqXC8ePH2blzJ5VKBajZBT/4wQ+w2WwMDQ2xY8eOzeyCCROfiU1l
      AEmSaGtrY25uDq/XC4Asy4yOjtLW1oau65vZvAkTn4tNtQE0TePWrVtMT0+LxDhVVbl16xYz
      MzPY7fbNbN6Eic/FY0uA5fkZiroVSSvTHguwlNLpaQ8BYLVa8Xg86LpOJBKpNWixEIlEsNvt
      ZraoiWeOx2aAXD5P2bAilzNMV6sodjeapqHrOoVCgfX1ddxuN1NTU3i9XjRNQ1VV0uk0t2/f
      Zt++fU/iPUyYeCQ8thdoZnKckm4h7HOSzObxegPEoiEymQxer5dcLockSVQqFYLBoLhPVVWm
      p6cZHBw0PUEmnhkeWwL09A+Jf4eizX9TVZWpqSl27NhBIpEgGAxiGAYnT54kmUxy5MiRx23e
      hInHwqYq4aVSiWQyyeXLlwkEAkAtBpBIJOjv7ycej5urv4lnik11g3o8Ho4cOYLVar3nb2fP
      nuV73/veZjZvwsTnYlMZ4G//7nuMzyfE7z/5x38GWZZ58cUXOX78uIgNmDDxrPDU/ZCVSoUr
      V65QqVS4dOnS027ehIkmbKoEuB9sNhvd3d2MjIzg8XiedvMmTDThqTMAQDQa5c6dOySTSXw+
      H7qu8+Mf/xhJkhgcHGR0dPRZdMvElxBPnQE0TeNnP/sZ6XSaw4cPI0kSkiQxNDSEoijmvgET
      TxX3MEAikSAQCGxamoLFYuGb3/wmlUpFGMGGYXDp0iWhHvX3929K2yZMfBr3MMBbb73F66+/
      TiwW25TV+B/9x+PcmF4Tv//D330Tm1VhYGAAi8VCOBx+4m2aMPEg3HeZf+utt7h8+bLI4X+S
      KFWq5Euq+M+gFhwbHx/n5s2bLC0tPfE2TZh4EO6RAC+99BKapgE8tSitoii88cYb6LpOPp/H
      MAwzQmziqeAeBujt7aVULJBIJJGVz7eRZybHUFwtrC7MMNAdYzYlsWuo86E6oes6uVyOyclJ
      otHo599gwsQTwn1n+OTNa1y+eYevfue7hNyfvWkll8tRLeoEPHamV7L4fAGRDv3pRNNqtXoP
      TdM0NMng3LlzJBIJwuGwkEAmTGw27ssAgaCXjo4BbJbPN4K7u7vJlAxavE4CZRWb3Y6iKMiy
      fI8ac79N8DXXp4zP5yMWi+F2u7FYnkl4wsSXEPedaYahMzs7y4EjBz73Ad5AmHpGj8v96B3R
      dZ1yuWzuEjPxVHHf2ZbJVJCMPOXq01FFDMMgn88zMzNjniFq4qnivhIgFPLgD7dj/yVUoCcB
      WZZpbW3l4MGDpgQw8VRx39kWTySJLy5SeYrG6K5duzAMg2Qy+URLNZkw8Vm4RwJklmZp6d3F
      q64A8lPyxRuGwVtvvcXa2hq/9Vu/ZcYATDw13MMATr+PC598giEpvNg7+FQ6Icsy3/ve9xgb
      GzPripl4qriHAayuADuG+0hXZCzK01mJ/+1bF7g2tVr78dMp/uFffgWvyzw0y8Tm475GcC6d
      4PLNOVrbW/HYNt8nv5zIMbWUEr813bQBTDwd3NcI9vhbsCsy5jQ08UXHfRkgn41jtXjQNPPw
      WhNfbNzDAIZh4PL4KWklHFYzJcHEFxv3MEA5l+T8+ctMTU1RNiWAiS847lni1WKOxXiefXt3
      Y5M/3wuUSawwMR+nmk8z2NfGbEpi72jPpnTWhIknjXsYwBvt5i//xT/3S95uMDe/SLFYpSPs
      Y2Y1R0sg+NDp0PejVavVh3sTEyYeAY+p5Evs2L2PYrGILEFIrWKx2B46Hfp+NDMl2sTTwBOZ
      ZU6nEwC7WQvbxK8YzNRLE19qmAxg4kuNLcsAhmHUXLHlMslk8ll3x8QXFFuWAepnBV26dImL
      Fy8+6+6Y+IJiyzKALMuiqszw8PAz7o2JLyq2LAMYhsH6+jqSJJFKpT7/BhMmHgFbmgF6e3tJ
      JBLYbLZn3R0TX1BsWQaor/zRaFQc0msYBgsLC02RY8MwMAwDVVXRdTN3ycTDYcuGW2VZ5siR
      I5TLZaanpzEMA13XOXfuHJ2dnXR1dRGNRjEMg9OnT5PJZPD7/Rw5cgTDMLh58ybJZBKPx8Oe
      PXsAOHXqFNFolEKhwO7duwG4ffs2pVIJt9vN4GBjC2j9YGBT+nyxsWUZQNd1fvSjH7G+vs6b
      b76JJEnIsszzzz9PtVoVBrIkSYTDYYLBYNN+4kKhgM1ma0qp8Pv9uFwuVlZWBC0ej+NyuVha
      WhIM8NFHH1EulzEMg9deew2ApaUlSqUSlUqFkZGRp/EJTDwFPLYKlIqvsriyztraGppaYD2R
      fRL9QpZlDh8+jMPhwO/3C/q5c+f44Q9/SCaTEbTJyUmuX7/O9PS0oOm6jtVqbTpnKJvNcvPm
      TVwul6D19fXhdrtpbW0VtP7+fiRJYmBgQNAmJia4evUqa2uN2gY3btxgZWWlSSVTVZViscj4
      +Ligx+Nxjh8/zu3bt80jX7YYHlsC2B1OUusp1teXKORDlAwHLX7XY2eDVioVPvroI3bv3s35
      8+d57rnnAHjllVfo7OwkmUwKKeD1eikUCrS2toos0lKpJP5d/7/T6SQYDJJOpwXt+vXrlEol
      vF4vfX19AKyvrxMIBLhw4QKdnbWTrtvb2+np6cEwDHHv6uoqLpeLGzduCKlw4cIF3G434+Pj
      9Pb2IkkSt27dEsG8OnNlMhlSqRRTU1McPXoURVGYmJhAURQmJyd59dVXkSSJhYUFVFWlp6dH
      JA3quk6lUiGVSjUxLtQkn9VqxWq1YhgGq6uryLJMJBIR92qaxsLCAt3d3ciyLN5pI03XdVKp
      FMFgsOn5uq5/oQ4ve+w3mbozjibJhKMRMrkSTqvyRLJBrVarKKDX3t6OxWJBURQ++ugjbDYb
      8/PzgpZKpZAkicXFRUErl8ssLi6SyWSwWCxYLBZSqRTnz59H0zRBi8Vi6LpOOBwWNKvVyq5d
      uzh8+LCgLS4uoqoq586dE7Tnn3+etrY2HA6HoLW0tBCJRPjOd76D1WrFYrFw+PBhXnvtNTo6
      OkSmazabxel0EggExL02m43JyUlaW1vFdUtLS7jdbq5du4Ysy+I93n77bd577z1Bi8fjnD59
      mvfee49cLofFYmFlZYXx8XGuXbtGMpkU977//vucP3+e5eVlLBYLhUKBDz74gHPnzjEzM4PF
      YkFVVU6ePMmlS5coFApYLBZ0XecHP/gB169fR9d1LBYLsixz/PhxVldXmZiYEO9SH4d8Pi9+
      S5KEYRiizxuvkySp6beu6+IbbLxm4733u27jvPu85+m6/vgSYPvu/eLf7V2P+7QGDMPA6XSi
      qiqTk5NiBfzKV74iPmK9kMa+fftwu93Mzs4KadLe3k4wGMRms4nrIpEI7e3tQjpJkkQ+nycW
      izVJofHxcYrFYpPqFYvFSKVSdHR0CNrFixcJBALcvn1bqEsrKys4nU5u3rzJtm3bkCRJTN6J
      iQl6e3sBxHvJsixWVEmS6OnpYW5uTrSxY8cOLl68SCgUEgMbjUZ58803mZiYEP1uaWlh3759
      osYbQFtbG+vr66iqSigUAiASibB7926KxaKQCj6fj66uLgqFgrCD7HY7Bw8exOVy4XbXTj2W
      ZZkXXniBWCyGqqrCQRCJREilUsJxYBgGH3zwAS0tLSQSCV5//XV0Xefdd9+lUCjQ1dXF4cOH
      RW04WZZZXl7ma1/7GgDHjx9nYWGBoaEhIfnPnDlDPp/HZrPxa7/2a0DNVpufn6erq4sXX3wR
      gBMnTggJXrffzpw5w8zMDLFYjGPHjgFw9uxZpqent64RLMsyR48eBeDOnTtioE+dOkWhUKC7
      u7tpRRkfHxfF9SRJor+/n2QyKdSuuk6/vr4uPEqKonDo0CFkWWZychJVVbFarbz44osEg0Gm
      pqaoVqtiRZyamhJqEtQmXalUoru7W9BCoRDLy8vE43G2bdsG1NSedDpNJBIRk7hardLR0UE6
      nRb9s9lsnDt3rkntmJqaYnFxEUBIroWFBWZnZ5menqa3txePx8PNmzdZX18nmUzy+uuvEwgE
      mJ2dZXx8HKvVSmdnJ21tbeRyOe7cuSMWgdHRUbLZLHNzc4RCISYnJxkYGKBarXL69GlcLhed
      nZ3s27cPXddZW1vj3LlzbN++Xbzf2toasiwL5gbYtm0bbW1t5PN5MSbt7e2USiXa29vFda2t
      rUSj0aZ3DoVCtLa2Ntlq4XAYl8vV5OioOz/qxRahtvA5HI57rnO73WJhqNNsNtvWjQMYhsHS
      0hJzc3Ok02lBL5fLVKtVVFUVtLm5Oc6cOdMkZn/6059SrVa5ffu2WGF//vOfc/r0acbGxkRs
      4e233+b8+fOEw2GsVitQc4GePHkSu90uJuyOHTv47ne/KyZ9/TpN0ygUCqIvvb29aJpGS0uL
      oK2srAjVqg5N0zh//jyJRKLpuqGhIbLZrGD4trY2IdrrfQ6FQmiaRn9/v9iLUbcFXn31VTH4
      0WiUnp4eWlpahDSzWq0MDg5itVrFPXa7ndbWViYmJsTktNlstLW1cfToUfEuFouFXC5HLBZr
      mrDBYLBpsmuaxsmTJzl//jzFYlFct7i4yM2bN5s8c/Pz87z33nuCyaFmx0xPTzMzMyNoiUSC
      lZUVZmdnBW11dZXbt2+zvLwsaAsLC9hstqbsgcXFRSqVCvPz84K2tLTE1NTU1mUAqHW8rl/X
      J2KpVGJlZaWpmqSmaXz1q19t+ogdHR28/fbbbN++XdA8Hg8tLS1NhuPQ0BCjo6NNx7JfvXqV
      fD7fxChnz57lxIkTTE1N4XDUdv7s2rWLvXv30t3dLZjA6XRy6NAh2tvbxYQYHBwkFovR1dVF
      NlvzkrW0tNDX18fAwICY7J2dnRSLxSY3azabxWaz4ff7ReWc+sSYn58XtOXlZXp7e5menha0
      tbU1isUikiSJRaRYLHL8+HGmpqYEIxeLRVGeqq5+qaqKLMtcuXJFFC7UdZ2FhQXm5+fFdYZh
      MDc3hyRJYrLLssyOHTuQJEl8K0B8l7rqVb82GAw2MZTX66VYLNLV1dCpfT4fq6urTdJ2z549
      hMPhJqnc1tZGT09PU5Whzs5O+vr6xPtCbcE4cuTI1lWBZlbSKP4OFtIauKKU1Sp2a82g/OlP
      f9qknzscDiRJIh6PC9ra2hrDw8OMj48LvT2dTpNKpdB1XTDG3NwcU1NTKIoiVj+Hw0E4HG6a
      iLFYjOPHj3Pw4EFBO3v2LA6Hg0QiIQbm7NmzLCws4HA4+PrXvw7UPEOzs7PYbDa+8Y1viOdF
      o1GWlpbIZrMEAgF8Ph+HDh0in8+TTqcJBoP09fXR19dHMpkkHo8Ti8UYGRlhYGCAbDbL+vo6
      7e3t7NixA1mWKRQKrKys0NnZSW9vL729vaTTaeGFamlp4Td/8zfFQgIQCAT4/ve/T6VSESus
      3W7nxRdfxDAMxsbGMAxDGPSSJIk4iSzL7Nq1C1mWUVVVqHPxeJyrV6+Kb6jrOu+//z4DAwPi
      PaC2YlerVXK5HENDQ2JMbDYb4+Pj9PTUDlgYHx/npZde4saNG0LV+uCDD+ju7iabzYoFcWpq
      ikwm0ySVN6p8G2nJZHLrMsB/+cUNTlxpiLv/6396g2jAxYcffgjUJtpLL70E1Cb79PR0k26p
      KLXaw/UPCDUJsG3btiZd1eVyEY1GmySK3W6nra2N6elpYVfcuHGDY8eOcfHiRUZHR4GaKlL3
      PNURiUTuKfIRjUbJZDKoqiok2cmTJ9E0jXQ6zbe//W0APv74Yzwej/BCAVy5cgWLxcKtW7f4
      zne+AzREf6VS4eWXXwZqzH379m06OjrEaprP5/noo49QFEUYjvl8nmvXrrGwsMCv//qvAwiP
      T7FYFEairuucPHmSdDrNsWPHhGrp8XhYWloSk7X+zk6nkzt37gA1ff+ll15i//79LCwsMDw8
      jCzLvPbaa8LOiEajSJLEyy+/jNfr5ZNPPhHMs3//fiqVCktLS4J2+PBhlpaWiEajwhV79OhR
      IpEIU1NTaJqGoii88MILeDweTpw4Iey3559/nng8TiqVEnbe4cOH8fv9W1sF+jRkWWbv3r0c
      OnRIpDdAzaBpbW1tEq2BQACn09mkFjmdTrxeLwsLC4JWLpcpl8tNdoaiKFy8eLFJ3xwZGeH8
      +fPCmwK1VeTTVW0mJycxDKOpxvLk5CSapokVEhrG2ksvvSTUrO7ubnp6etB1XTBKW1sby8vL
      9Pf3C1smk8kQCoXwer1C1FcqFTo7O7l69aqIU+TzeeHlqgcOXS4XLpcLWZaFelKpVEin0/T0
      9LC6WjukWNM0EokE/f394hvWvTanT58Wamndu3Px4kVWVlYE7ezZs7z33nsEg0EkSRIRe6DJ
      Fkomk1y5cqUpDUVRFLLZrEh1qd9js9ma1Nf6eH862l9f/OpYXl4mHA6zZ8+epljKwsLCrxYD
      /PGJW/y796f59x/M8E/+4DzL8RyXxpcZS9qYKXj5ZKrAerrAWqqAO9LLekEiVbGSK1ZYv0tb
      zRlkqnYy+TIAR48eZefOnU2SIhgMUi6Xm3TQ2dlZ4vG40OuhxhSdnZ1NA7B//34ymUyT7rt3
      717y+XyTUb28vEwsFmtK7svn8/zJn/wJk5OTIrFvZmaGlZUVJiYmmvTajRMVaqt43YitP8/p
      dNLb28vCwkKTvq+qKoFAgImJCQAxQa9evSpcntBYCOpelrrXqLW1VRjvsiwTi8Xo7OwUkkeS
      JEKhEMViURjQhmHw9ttvc+nSJW7cuCEkyqVLl1AUhevXr4tv8/HHH3Pq1Cmmp6cF009MTPDh
      hx9SKpUE7YMPPuDy5cucPXtWLCK/+MUvuHTpknCKQM1Wmp+fZ3x8XNCuX7/OT37yk62rAt0P
      C+uZxjHq1KrOXxhf4kcfjQnansFWLowt8gc/vyFov/MXjzG5mOA/vntF0P7unz1KMlvkX//X
      84L213/jeXpaA5ydLoC9i/OzJQxHgsGOIC+99BLPP/98U3JcsVgUCXd11PcwbNRB65NlI621
      tZXl5eWmIGAwGGRwcFAEfKDmVarnL230Ank8Hi5cuCBogUCAkZERbty4ITYQ2Ww2IpEIwWBQ
      9NFqtQqJWV+J68GhI0eOCOlR9zq9/PLLgiZJErdv36ZcLgvGqxc3vHPnDuVyme3bt2MYBul0
      GpfLxfXr14W0bm9vZ35+nkOHDol37unpYWxsjBdeeEHQotEoTqezSaLXvVcbpW04HCaXyzVt
      mAqHw2QymSZaPdi40QYIh8M1Ol9iGEbtP/Ebg8nFJP/pZ1cFzeuysZbM87/9f6cE7c9/fQ/f
      OTrK6Ogo/f39TS7ZoaEhent7KZfLYnL39fXR1dUlPDJQ82YFg0FSqZTQc9PpNNFolHQ6LeIU
      09PTtVrM1aqIA8zOznLz5k0RDISaW+/ChQtYLBYxYZeWljh16hQ2m03EVOLxOCdOnMDhcHDg
      wAEikQiFQgFN01hdXcVisdDW1iZymhKJhIi71NPO6zp1V1cXkiRhtVoZGhoSrsf66m6z2Zrc
      wX6/n+vXrzfRgsEgV69ebVItocYsG13EmqbR3d3dRFNVlXA43EQrl8v30HRdx+VycfHiRWG7
      5PN5Ojo6Hp8B5mcmKRlW1GKO3vYQcymD4Z7Y4z52S0GnuWaBoRtcHF/if/1/Twja94/tYPdA
      lP/l3/1c0L59ZIRf29PN3/pXPxO0rx4c4C98Yy/2QM1gD3oirCYLhAMuLN7adwt6o6wkC7SH
      vRw4cABJkiiVSmK1HxwcZGhoiEwmIyRSd3c3HR0dFAoFsdq3tbXxrW99i3K5LNSYUCjEG2+8
      gaZpIobg8/k4evQopVJJBJ/sdjvHjh0ThiTUpMLo6CiapjWpSi6Xi4WFhSa7p257jI2NCQ9Z
      sVhk9+7dnD59WhjvhUKBffv28dFHH/Hqq68CNWeFqqrCZVzvY91WqSMQCFAqlZoOTQgGgxQK
      hSaPYCgUIplMNu0XiUQixOPxx2cAQ7FhNwx0rcTkUhKXy/v5N30BYBigVhsftOZma6ZVH0Bb
      TxeamOLlvT38ha/vbaId3t7B3/j+8/z2P/5jQds1EON//nO/xj/9L+cErSOyxF/69X388x+c
      R71b1jba4ua/+/ZB/uUfX6BQqk3KgMfBX/3eYX73RxdJ5Wr+epfDxv/4p1/g37x1gdVkzbax
      WBT+3p89yv/9ziXm1xoZt3//z7/E6WtzrKYaR1b29mmspwv4Wxt++KqmY1Fkdu7cSSAQaJqc
      9ajyRueCw+Ggs7NTMCPUVLeBgYEmddNqtdLb29tEUxSF4eHhJpokSb8UzTAMhoeHn0A2qGxQ
      MqzEOrrJFkq4HqdatokmGAaU1Ybhq6oaBnDu9pKgZQu1CX5hbElc2xOrxUguTyyTvmvsR1tq
      43J1coWVu5Pd566Vobo+tcbMSm1ltVlrUubmzDq35xqrKAa8e/YOlycaeym+9twA/+GdS5y5
      0fCq/Ye/+yYnrsxwbbJhq/2V7zzH3Gqa6eUKVxYmAQjFSiysZZhYaNBaIgXW0gVuL1S4slBz
      qfrCObKFCtfny1yer13nbslSUTUub6DZfWkkiSaa4k7itFu4NFfi0lyNhjOO3+0QNMEAG8Pv
      DwOHx0/d3+Hz1oyqTCZDsVhkT28L7YE619VSgHd2+wm6Gs6nQj7HaIcPl6WxSpZLBYbaPMh6
      w+WlVUr0RVy8vHND+q9epivkaKJZUWkP2JtoDkUj6rM20dxWHcktN9H8DgnDoIkWdCk4rEYT
      LeKz4lC0JlpbwIaVahOtK+RA0itNtL6IC10tNdEGW91UyoUmWk+rl2Ih30TriPjIZbNNtGiL
      m0wmw9HtMap3j7Nv8TnJZDI8PxqlVK7ZJ16XnUwmw3NDYbKFmpR22K1kMhn2DwTpjdRWYIsi
      k8lk2N3bQqu/4a7M5bLs6PITcDSM9mIhz0i7F4fc6E+lXEDSKzg3jGchn2NxJc6d2cZeit29
      ARZXE9yZbTDUtk4vy+tZ7sw2GHyozU0yW2qi9UaclCrVJlpH0I4s0USL+Sy4HbYmWtAtU624
      BE0yNmmHRiaTMSs+mtjy+JWKA5gw8aRhMoCJLzUeyQjWNZV0tojbYSFXVHE5LBiyFauiYBi6
      CLBUq1XGx8dZXFzkyJEjTZa+CRNbAY/EAKVikbWlORZR8AeCJOMrGJJEJV8i2N5FNOgTBnUi
      kRDbF81ze0xsNTySClTKZ1FcfsIBr8gVr8Fo8iTVo4SxWKwpj8WEia2CR5IAbl8ATSnhdTsZ
      8bZgUwyQrVgUBV3XxMZkVVWZnp6mp6eHO3fusGPHjifdfxMmHguPxAB2p5uIsxZYubcqktL4
      l6LgdDrJZrNNmZUmTGwVbGoynGEY9Pf3oyhK095QEya2CjaVAWw2m0ie2pj/YcLEVsGmMkC5
      XOadd94hl8uJrXYmTGwlbGogrL7RYs+ePdjt9s1syoSJR8KmMoCqqmiaRrlcbsrPNmFiq2BT
      GcBms1GtVlEU5Z5DVk2Y2ArYdBugfqZmpVIhGo1uZnMmTDw0NjUd2uPxYmAgUdsjqihm7p2J
      rYVNlQB/+3d/xvh8Y3Pyn/zjP7OZzZkw8dB4JAaoqiWWVpNEg17ShSpORUO3OHFYLei6ZmZ9
      mviVwSMxgKpqGJU804tlrJJOXpbASJJcS9A9vB27XX9ghRgTJrYSHokBMvFlkkUdr00lV9Jw
      KFUMi51AIFA7+8bvvm+FmPqxHiZMbBU8EgNEOnoJarWDmwwDJAy4e7xe/ZCn++FB9PqBS2ZJ
      UhNPG4/klpFlRVRgVBQZeUNNsEcpoKaqKn/4h3/I+fPnmw4+MmFis7EljkasH9/d0tLSdKis
      CRObjS3BAFA7EdgwDAYGBpqKUJgwsZnYEpEpWZbxer2iuJ0JE08LW4IBdF0nl8vhdruZnJx8
      1t0x8SXCllCBFEXh2LFj+Hw+UWHlQR4jEyaeJO4rAeJrq1w4d5aS+nROctA0jWq1KgpCmzDx
      tHBfBsgl10imclS0p3OOj2EYnD9/nkKhcE/VFBMmNhMPtAGcbg82y9MxEWRZxu12i/KeJkw8
      Ldwzw0u5JDfHp9CqGvqmJErfpxOyzPDwMA6Ho6nelgkTm417jGCHx0M+mUaXrKiaDtZ783eK
      uTSJbBmbpJKtgJ0yusWJ1+lE1XUioYfb/aXrOrOzs3R3d3PmzBlR09aEic3GfbxAVg4c2sW1
      28tYHrCBxenxI2eXqFTKqBUZm8MKWolbV8fYdvAImqZ9ZjZovahxveAx1GpcRSIRVldXzaxR
      E08N93WDSoqVQjZFtXp/CZBLJ1haWaU9FsYoldGrVQyLk6HtOynm0vhd4ftmg9YrGL7zzjts
      27aNbDbLwYMH+cmZibslepYB+HNfi+GyW+9p14SJJ437MkA+vUIxb6A+4DRnj+3OdwoAACAA
      SURBVD/I/r01Nae17eEaVBSFffv2oWma2CN87vYiZ281Krr/6Vd3mAxg4qngXgYwDLz+KF2j
      LoKuJ5+erOs658+fR9M087BcE88c9zBAcv4O0wkVayVLuqTS4nyyTCBJEm63m0AgQCz2xaon
      bOJXD/dYuVaXF6OUQZdtWDfhFAdVVUkkEiiKYu4QM/HMcc8M94RibBvoxuFyYZGffETWYrHw
      ta99jf379xOPxx+pNKsJE08K90+FSCeZnVugugmRMFmWaWlpQdd1cwukiWeO+3qBPP4Werp1
      rI+wvfHzYBgGP/rRj+jq6qJQKJiFM0w8U9yXAdaWpxm7vk7/jh3YLU/2VGdJkohGo1vGC3T9
      +nVUVcXpdDIyMvKsu2PiKeOeJb5SzFFUZVRZxb0Jvnhd18lkMlSrVTKZzBN//sMinU6jaRqp
      VOpZd8XEM8A9DCArCuWySmssAptgoNYlgNPpZGVl5Yk//2GhaRrz8/NUKpVn3RUTzwD3qEDF
      dJxkvorHtTlZmZIkEQwGaWtr+1SJ1WcDt9tNsVjE5XI9666YeAa4hwG8kU6++Y3Pzskv5tIs
      rKWwo5IoVHEpVXSLA6esILu8dLaGH3jvR1fnWEuXuDg3BUBn17Mtnr26ukoymTQ34XxJ8Uh7
      gp0eP+5sAbUCfpelpkgZGqtLy/Ruj35mNug7Z8a5NrUmaF892HfPdfUtkk8Do6Oj5PN5nE6n
      mYX6JcQjMUAunSCVydLRGiFf1nEqVXSri9ZYJ1VNRdlwUlxTYxbLfc8LvR/NYnk6+/WdTie6
      rrO2tkZXVxdWq5mE92XCI80yjz/INn8tG9R3z19/tYrhnT9/nkQiQSQSMSf/lxBb4liUZwmP
      x8PQ0BAdHR3PuismngG2xMFYzxKKouBwOFhdXX3WXTHxDPCllgD5UoXe4Z3IsowFKJZVnA8R
      /Dtx4gR+v5/BwUHTjforii81A/zi4gz/+r+eF7//+vcP88q+vl/6fr/fz+joKLOzswwODm5G
      Fx8KqqpSrVZxOBymW/eXxK88A9RdqPV6xJ9Xn6BUKokK9g8DXdfRNA3DMEQWq81m4+bNm4yN
      jT1zBpicnOTs2bNIksTXv/51fL573RMm7sUXggE+/vhj0uk0fr+fI0eOPPDajz76iEKhgNVq
      5dixYw/VzvHjx1lbWyMQCPCVr3wFALvdTiQS2RKrbSQSoaOjg/n5ebNI4UPgV4oBDMNgdXWV
      +fl52traaG9vR5Ik/H4/lUqFcPjBEWgAr9fL3Nwc+/fvf+i229raiMfjRCIRQbtz5w7FYvFz
      i3qsrq5SKpWIx+Ps3bt3UxhmZWWF9fV1ZFmmUCjg9/ufeBtfRGx5BjAMA03TsFgs4gzRtbU1
      FEWhvb0dgLm5OUqlEpIkMTw8LNSi+vlD9Qk3NzeHpmlMT08zPDz8UP2Ym5tDluWmBL4XXngB
      l8vF7Oxs0xlHn8bS0hIXLlygre0hj9B4CHR3d3P27Fl8Ph9er3fT2vmiYcsygK7rnDt3DovF
      QiaTESrL4OAgTqcTt9strh0YGODy5ct0d3cL2pkzZ8hkMrjdbl588UUAYrEYsiw3XffLYs+e
      PRSLxaYaZvF4nEQiQTabpVKpPFASeDweRkdHicfjD93uL4v5+XkAWlpayGQyBAKBTWvri4TH
      igNkU3EmZxdIxVdIpLOUiiXy+fwT6ZgkSbS2ttLV1UVfX8Mzs7q6isPhQFVVQbtz5w75fJ71
      9XVBc7lcTVICYH19nfb2dpaXlz+z7UuXLvHee+/xySefCNrY2Bj5fJ6pqSlBm5mZoVqtcuPG
      jc9Ug9rb27FYLITD4U2zF/r7+/nud7/L7t27KRaLm9LGFxGPJQFWVldw+CKkc3kMI8fk0ip9
      O/bg+IxkuPslvt2PVi6XuX79OoVCgVgsRkdHB7quY7FYhApUT157/fXX0TRNTEiA2dlZCoUC
      gNh2+frrr1OtVpmfn0dVVfRPHfyl6zrVapVisUipVMLhcIjnHT58GKgZvnVPUjAYZGVlBb/f
      L66bmpri5s2btLa2Clvj1KlTeDweOjo6Ni3hbmFhAajtcDt69OhDtVNXM9PpNMFg8Kka9Zcv
      X2Z0dBS7fXNTaAzDwDCMe9TUx2KAYKCFyYUlfE4Zw+IgGouRz+UI+VyPnQxnt9uxWq0cOHBA
      THzDMPB4PAQCATwej6CdPn2a7u5uKpWKOGpFkiSOHj2Kz+cTLs+zZ88SiUQolUr3dZnKsozF
      YqFcLlOtVqlWq+Ley5cv43A40DQNq9WKoij09PRw+fJlotGouC6fz+PxeHA4HOLd+vr66O3t
      JZlM3vd9nwSsVisXL14kFos9dDLh+vo6ly5dIpFIsGfPnqe2NVTXdbLZLJOTk4RCoSZp/STx
      ySefkEql0HWdr3/9601/eywVKBht4+C+3QyP7mRkcJDu/n6626OP1dk6dF3HarWysrLSpHZs
      27aNQCBAKpUSksPlclEqlUin02JyuVwu4vF4k85utVqRJIm1tbXPjBd0d3ezY8cOWltbm+h+
      v5/Z2VkURSGdL3F7IYsj3I/uamVxPSuuCYVCjI2Nif719vZSqVRYWFgQ20DrK9KTgqqqVCoV
      YZA/DDweD9FoFJ/P15QTpev6Qz9r472f9471Q9Kmp6c3dUfegQMH8Hq998332rJGsKIovPTS
      S0BNx69/zPfff59KpYLf7xeV6VdWVpidnW2asC+++CI2m03cK0kS8XicmZmZz3WX3rlzh3Q6
      jdfrZXR0FIBMJsPU1JRwL95ZSPIP/p8PxT1/5tUd/Obru7Db7cRiMTwej2DGkydPUiqVUFWV
      nTt3ArWYhN1up6Ojg7a2NvEudXyWlFhdXWV2dpbZ2VnefPNNFEXB5/PxwgsviDhHHfXvJkmS
      aKNUKlEul8U3LBaL3Lp1C7/fz8LCAiMjI6iqyjvvvEMmk+GVV155qGRBXdf5yU9+wsDAAJlM
      hueee+6B1+ZyOVpbW8lms4J27tw5isUioVCI7du3P/DearVKIpEgGAx+psQ7f/48s7OzBAIB
      du3a1fS3LcsAhmGwtraGqqri40iShM1mw+l0NhnGIyMj+P3+Ji/L9evXkSQJp9MpJsDAwACB
      QOBzE9927dqFpmnYbDZxb1dXF7t37/7cfczj4+Osra1ht9tFydehoSE+/vhj+vv7xcRubW2l
      t7eXmZkZce/ly5eRZZmpqSneeOMNFEVhfX2dyclJqtUqL7zwApIkEQ6HmZubw+VyCUn27oUF
      qndLWgVWZnnjhWGWl5c5ffo0mqbxyiuvEAqFWFlZ4YMPPsDhcLBv3z76+vrweDx0dnYiSZJw
      1dbVwVdeeQVNa9SK+zSTGobB8ePHkWWZ3t5eurq6kCSJbdu2kUqlmnKk7sfgPp+PeDze5LWy
      WCx0dHQ0OTWOHz9Od3c3PT094t53332XPXv28LOf/YxvfOMbD2yjr6+PtbW1+x7FuWUZAGrh
      /Z6eHqD2MnWR7Ha7uXbtGp2dnVwcX+bWbBa4q4KE84T9LrLZLG63m0KhgCzL3Jhe49JE4zpn
      IP2AVmuGbjqdZnp6Gp/Px0qqxKkN92r2tQfeu2vXLpLJZFMganJykp07d3L69Gl27tyJoigY
      hsEPfvADqtWqYJRYLMb169cZHh4Wg5fP59E0jWw2i67rKIrC1NQUc3NzVKtVVFXFZrPxg+M3
      Kd8tatgT8/PGC8O4XC78fj82m01MxHA4zLe//W0ymYxgnmq1SqFQwG63UywW8fl8qKpKqVQS
      Qbzu7m6q1So//vGP2blzJ6lUiv3796PrOl6vF4fDQSqVoqurC13XGR8fp1wuEwzW9o3ous67
      776Lqqp0dHRw4MAB8a07OjqaGGVmZobOzk727t0raPXqQXNzc8KNPTIywqlTp9i2bZu47uTJ
      kyQSCQKBAC+//DJQW1i6urqYmZlpeiZsYQYwDINEIkE4HBZ6qCzLvPLKK+LvABfHl/jRR2Pi
      vn1DbYT9LiqVCpFIREiPmzNr/OcProvr+tpaHtj2xYsXmZ6epqenB7vdztzaatO9TpuFntb7
      +9nryWjLy8vY7Xa8Xq9IzxgYGBATOxKJ0NPT07QfeWZmBpfLxcTEBAMDA9hsNpHisfEAgVAo
      hMfjaTL674elpSWq1SqBQEBM9kKhwMmTJ8XEa21txel08tprr1GtVpmZmSEWi2GxWNi/fz/j
      4+NCbVAUhcHBQdLptMg1qntWxsfHGRoaEuMUi8U4f/68qPZTdwbY7Xah70uSxM6dOzEMg0uX
      LglpOzw8TCQSIZVKiSP0C4UCv/jFL4RKCpDNZsnlck3foKOjg46Ojiab4rXXXkNVVQKBQJNj
      A7YwA0iSxMjICFarVQS9/s8fnuWn5+6Ia/7ZX/36g26nr68Pn89HqVR66LYPHjzI8PDwIx3b
      cuPGDTo6Orhy5Qrbt29ncjHJ3/w/3hV//9qhQf7Kmwe5ceMG1WoVq9UqItb9/f2srKwQj8fF
      IMViMS5dukRXV5eYxNPT08IVrKrqA5kgGAzi9/uZn58X9xqGwZ49e7h165bQ6yuVCteuXaNc
      Losabaqqcu7cOVwuF8vLy7S2tqJpGhcvXhSMAIjUi7a2tqYEvPX1dfL5vOibYRjcvHmTUqlE
      e3s7IyMjwoPncrlYXFxk3759QC3m4na7uX37tsi7euGFF/jhD3/YdJKgw+Ggvb2dcrksaJOT
      kyQSCZGpCzAxMUE+n0eW5Xui8VuWAT65ucDcahmovVxnTwUDo/moogc4GG5Mr3FzrgysAXba
      E7mHantsbIz29nYRR3gYHDx4kGKx2KTvb+xzXXI9//zzSJLE/Pw8pVIJt9vN1NSUyC2qp1Ys
      LCywurpKOp1m3759WCwWhoeHGRkZIZFIfOY2zmq1yvvvvw/UPFHhcFhM4lAoRD6fx+v1oigK
      0Wi0yY5yOBz8qT/1p9B1ncXFRQzDEEw6MzMjVFPDMJiZmREZsnVb4tVXX+XAgQPE43HhEPD7
      /RiGIVQ+SZLYvn27UNPq2L9/P6urq03qyocf1hwO58+f59VXXwVqUe+xsbEmp0YgECAYDDal
      g6RSKRRFIZPJiO81MzNDPp/fugxw4sosJ67Mit9Hd//y6QuXJpb5g5/fEL8HOn75on2ZfBlf
      rI+cBrHe7aRyDydB7ty5QzAY/FzJs7a2xuXLlwkGg0LMP/fcc0iSxNLSEsViEa/Xy/bt27Hb
      7SLdG2pG4tTUFMlk8r6rWh2tra38xm/8BqVSSagEwWCQN954g1KpJNQqVVWZnJwU5Wp7e3sx
      DIMzZ86QTqc5dOgQgGCGQqHAysoKkUgEWZb56le/itPpJJerLTSGYXDx4kVWVlaE+mQYBul0
      msHBQWZnZ+nq6hJtxGIxFhYWmjw+Xq9XfEtFURgeHsZisTQxSmtrK9/+9reZnJxEVVWsVivp
      dJq2tjauXLkiVLJIJEIul2s6iTCdTnPt2rWtywDPCmdvLfIv/uiM+P3fv3kAn/uzsz3rKJZV
      3OEuykDn0G7imQenJKysrFCpVJAkSag7CwsLKIrCxMSEmHSyLNPa2srk5CSrq6vEYjHGxsY4
      d+4cdrv9HqNuIxKJBNVqlevXrwv1Ih6Ps7i4yNjYmMiRstls7N69WzgNoCY9lpeXGRgYYHV1
      lVAohKIovPHGG1QqFdLptJBmsiwzMzODYRhEIhEMw2B5eZlIJEIikRBS4Zvf/CalUknEcCRJ
      4vXXX0eW5Sb35KVLl8hkMkSjUcH0oVCItbU1VldXhdvz8uXLJJNJLBaLkCrHjh1DlmWcTmdT
      MuTIyEhTtLmlpYU9e/Y8GQYYv3WtdjCWoiA7P/tgrC8yppZS/L1//b74/ebREY7t7b3nOrWq
      4Ql3MRrqQJZk4pkS0RY3mUyG8fFxWltbhahOJpOcOnWKYrHIwYMHAdixYwf9/f1omvaZKQSV
      SoVPPvmESCQiHAler5e1tTW8Xq/wVP3bty+ylqzlcFksCn/nt15kPVNm96GXm2wHqBmj1WqV
      9fV1Ojo6hB4/NTXFb//2b9cCjakCw3sOI0uyeF+LInPlyhW6u7vFSvx7P73CW6cbDozf+QvH
      GO0J85WvfEVE/+u4fv06ly9f5vXXXxd0h8NBoVBgaGhIqJu3b9/G5XJRLBYxDIOleJZLcyUu
      zU3WHuSMM9QZolKp0NfX9yQYwMDm9GIYVVaWlujbbpY9+jyspQr8jX/ZMIxf3tvDX/veYdyh
      DvaGapOqzhSxWIxvfetbIsqtGwb/zT/8gbh3sDPIP/hLr9y3nariYs/hlzEMg6JeW0lPXF2g
      4Kid/Hfi2iJffW6Aa5Ord6t0gu1uVdB/9ocfc3uuEVf54T/604Ahsm51XRfBtW984xusra0J
      Z8V/+tkVfnGpEd/4V3/zm7SFPOL8pUQigSRJqFWNYrmRs6QZBn/04Q3+6MObgva3f+tF9g62
      8vzzzzM8PCx0++nlFGNxCQKD3FozcPjTdEX95HI53G43k5OTbN++nZnlNP/+xxfF8/7813Yz
      1Blienq65mx4iHF7ACR8bgeG1UUs1oGmmaerPQoy+TL/w7/4ifh9eHsHf+P7z/Pf/pP/Kmg7
      +qP8nd96kXypkQlbKj/4e//9f/MB6XzNiRBtcfNv/ta3+M8fXGPl7mrvc9v56nMDv3Qf19NF
      +rfVVKmwO4SuG/zzPzrD+Q0VPv/3v/6N+96bzJZo7anlGHnCHVRU7b7XVVSt6f00Teft02P8
      /nvXBO2v/sZhEpki//atC4L21753iKDXKdrY9dxRsoWGd+jT2L17Ny0tLUjGXdmWzWafeG7K
      jdkEuULNeyMhcWRnJ9en10jnyoL2/PYOxuYTJDJFQXtutJ3p5RRrqYKg7R9uZWE9y0oiL2h7
      B2OspgosrmcFbVd/lFSuxNxqRtC294bJl1RmltOCNtodolLVmVxMCtpQZ81YHp9PCNpAewsW
      i8zt2big9bYFcNkt3JheF7SumA+/2861yTVB64h4CftdXJ5YEbTWkIf2kIcLY8uCFgm46Gn1
      c+7WkqAFfU6GOoOcubEgaAGPg+29YU5dmxc0r8vGrv4oH99YQNN1JCRcDit7B2OcvbVIpVqb
      aA6blQPDrVwYW6ZYqU0wm0XhudF2Lk2sUCipGBgosszz2zu4OrlK9lNjd2N6nVSuJGiHt3cw
      MZ8gvmHsDo62MbOSZi3ZPHaL8RzL8Zyg7RmMsZ4usLDWGLud/REy+QqzK41x2t4bplCuMr2U
      ErSR7hBVTefOQmPsBjuDSJ8au/72FmwWmVsbxq6n1U9H2CtUJsEATxp1A2Qr0DaK68+jAU2J
      cvdLo31Qau3TfL+6Efl5tCfdxtN+380eO+V3fud3fodNQL2BlaUllmbHMVxhPI6axrW6OMeZ
      UyewBDsJuO2gV1lYXCSdTmN1uLBba9dlEyscP34SyRUg5K8FaIqZdT748CRYXYRbaoEXXS0x
      OTVFtlilxX/X/1tJ8/Z7p9B0g2j4bo57tcDN8VnsDgcOu61G0yqMT0xSKKsEfHdXBq3MT9//
      OflSldbo3U0sepX3fnECMAi2tNRohs6tmzcwZCtul1O884cf/oJKVSMUDAra5MQYVRTcToeg
      3Rm/xczsHG5fC057zb03PXWHctXA427k+Yxd/piPrs0y0t8IhmVScaamZ3G6PTju3ptNJ5ia
      nsXmdIvnLS8tMDkxgTcUxX5Xv19amCVbKOF0urDcnXALM3f45MzHeGI9eB01A7yUzzI1NYWu
      2PC4nKCrzC8skU6nsTnd2O6OU2p9iUuXr6DbfbR4aykNueQqvzh+EsnhJxSojV05n2RybhWH
      04ndVmtDK6W5eWcJn9cjnkclw9vvfURV14mGQ7VvreZ55/0TVFSdWOQurVri2vVbZEoqoRa/
      GKeJiTtki2UCft9dmsbNm7eQlNo41cbO4ObNG5vvBrXLGtmCSovU4EKP18/Qth0E6oW4ZQs+
      j4tUJo+xoTCf3elhZHQUv6+x/dFid7NtZARvoBF1NHQNTQeHZcPqYXGye/sILk+jzoGBhKaW
      qWob9U8DVa0ib9hhhqQwMjiEbN9wuoIk090exWpvPnGhXC43rVqGrtPX04Vs+1R9BcO4Z5OK
      w+EEi1O4WfPZNLl8EdnWnEAW7R5E8TbvtFPLZYLRVjS1AjgwDANd14m1dWBUK0Ctn0Y5RxkL
      bFgtFSBfURsBOsPA3xJmeEQSixSArlWwODwo3E2Jlq04LBLTM9PgCtIVql3rdLlRLDb8nsa3
      sbtqMQxvoPEdJElGq6roG8ZYsjgwyhky+RKOu4eSGRYHu0aHcG0IZhmKjZ2jw9jdjeeVKhUk
      2YLbsTEYWBtPLGoTrVyuIH9Kuihom380YrGsksumGpPO0Eln0hSKFaQNodxcJkW1XGAx3kiL
      rVTKlMtlDBqDp6oVstkssrxx0qmkcyW8G/YJUy2wlsw3BU4qqoHDJlNRN0xEQ0cDtKrWRMsW
      ihQK+SaaWjU+teVTwmm3ks03IsbpZJxSWUXVmo28tdUlJmfmm2iri7PMLjUyHt1ePwoVJqcb
      1xl6lXw+j/qpip3J5SnOXBnDc3eSqOUimWyepeVlPN7G4qCqFRKpVNOkUytFxm/dJFep5/ob
      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
    </thumbnail>
    <thumbnail height='192' name='Percentage comparision of cases vs deaths and total deaths vs total cases' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Percentage distribution of confirmed cases of each country' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1 (2)' width='192'>
      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
      vPsYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='104' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABoCAYAAACnk/+EAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARw0lEQVR4nO3de1wU5eLH8U9GipIcX4haYt5S6WIi7XJVNlYMj0Fqhml4KzCT/JmBnMpD
      XvLkwaMmGmnaS0w6kpFhopIHA4UticsiSkiCxkVCLgHVpoCwML8/FrmoiAnC8czzfr34g5nZ
      eZ6Z13xnntl9npl7JEmSEASZ6tbVFRCEriQCIMiaCIAgayIAgqyJAAiyJgIgyJoIgCBrIgCC
      rIkACLImAiDImgiAIGsiAIKsiQAIsiYCIMiaCIAgayIAgqyJAAiyJgIgyJoIgCBrIgCCrIkA
      CLImAiDImgiAIGsiAIKsiQAIsiYCIMiaCIAgayIAgqyJAAiyJgIgyJoIgCBrIgCCrIkACLIm
      AiDImgiAIGsiAIKsiQAIsiYCcJfKD52NUqls8bdK0+rShM6+2fz/TTWlGRza7s9ctcM1266n
      Ii0Ufw81Rl1VOaF98nOysFwSQdj8IV1dlf9SGt5f+DnG3lOw7h/H7y3mJbB1RRpPrA4XAbg7
      FVKQB6Zj7u/qivwXU7H8gArIJ/RzWgagWoHfARUmRqIJdJf6nd8qoH+/vrf38axP8HJT46BU
      onRQ47EymtKGWZpVSmau3UWglytOSiUO7m8Qmd80r3lTosX/ra7zavNLR3LQizgpV3E8cyvT
      lT5ElF9dUzkRPg4s+1p3e9vzZxmbYNJw6hcBuCv9RkUZRPkZ2v5OrrPwD03nVg+fKmMFfjuj
      +FarRRu/Cce01exIaJpfWTWQGZsP823iUd58+Du+iMtv9zrPh6zks4EriU58F/VjHswcm8KR
      mBLDzPI4Yk65MtXV9NZ3QYeoEU2gu5MjK77XsgKAGnQZe1jyyqu890AM6yeZtPnp+7qXcSjA
      H5/0Cqoaprnpm+abjnyUEabdATP69rm1GrW1Tp56nY0zhzcccANwn+fGjs0HyJ75Kn3jYsia
      +jKOnXk06nOI8PURV4C7X3dMR3vh7VpLYXFZK8uUUVp0H0ZGAOVErnmTDPstRCdq0WojWGLZ
      3jq0vc4RI4a3ONuaqGYzk2iOZ5cQc6SEmdNtO/FsrEPzDx826jxFAO5Kpz8n6FAGRZV6QE/l
      j7sIOWrKiGHmzRa6TEVFDVBDwVefcaTKCVsrgGqqK8G83wC6G9VQmpFAetGtF11YUIieGkoz
      DhGbfnXq7axzFNNmmhH+0Tq+YSbTRt16Hdqt8BAhUeYsWjNfNIHuSsMUjPg6kAWbfqTkj1ru
      6/0oTy/fToCqefPnN479fRbrtFX0HOTMgh3vYGgdWfCs9/PsC3DFftMgbKdPwaIf1NxCsWNd
      nmdTwFTst5sx5pm/obaE89z+Oge4z0C5OYCKN95mwO3tidZpVqH0i2r6309JFBi+Oh6WzRmy
      OPO8knskSZI6umxBuBU12bt4xfssnv9Zzy3cutwRogkkdAHDV6OO3t8w9v13uuzgB8QVQJA3
      cQUQZE0EQJA1EQBB1kQABFkTARBuqqbgm8aOcUoHNXMDj1HU2MVBR3LQXNQOSpRO01r2R9JX
      kBbqj4fawdBfaZo/oelNvZX0ORH4T3NCqXRAPTeQY0V6uoQkCK3Kk3Z7zZL+eTRHulwrSbXl
      J6XNngpp0ZdlkiRJUvGXiyR7z83SyfJaqbY8VlrpqpZWxl8yfDR+jeS2dLeUUnJFkqQr0oX9
      fpJavV7SSpIk1Wql9a5qyW//BemKdEXKCpkn2XvulvK6YAtFAISbuCRdutRySvxKhaRer5Uk
      6WdpzzyF5BfVtEDx596Swi9KuiRJUtWlS1Jt8w/m7ZY8FYukL8skSTqxRrJ3/1A6c3VebZIU
      qHaXPjwjdTrRBBJuwgSTZj9S6YsOEfmtKU52jwA/kX3GkjGPNy0w4KEh3JedSz5gbGLSrJ+N
      jvQDR8mytEfZF/LPnaX2ySd47OpsIwseeqiInLzLnbFRLYgACLdAT0VCEHNfWM9v86/tc9SM
      xWCGF5XSok9qTTbhb3iy+JtHWB88mxsP4LTgoaFQ/EtrvVnvHNEZTmiDjuQN3iyNeYBFW6OY
      P+Ymg1YKL5DzYH+u9knV50Tg67OR4vFr+WLjBB5s9WgzDPF8wM68tQXuGHEFEG5CT07oEpbG
      PMa/9gVfc/A/zKjHs0g/09RsKSnIp3bUMMNZXqfhHz4b0XmGsXdFy4N/yMhHuO/kD2Q2FlNI
      QcGDDB/a+Z2CRACEm0gmbHs2rgErUF134rdg4hQbEsJ2klahR19xjG27zjDB9SlMgMJDIUSZ
      L2LN/OHXNzNsn2F6TQQhXxVQQw3Zn24lso87Tz927YJ3nugMJ7QuP5TZzweTde10t01o31Vh
      +B1gMW998SN/GA3CecEaVs4fgymGAfPNu+MbWLIkIoz5QwzNo7f9NhP3s57ej05hxfq/MaH1
      NtIdIwIgyJpoAgmyJgIgyJoIgCBrIgCCrLV5263VajujHoLQJcS3QIKsiSaQIGsiAIKsiQAI
      siYCIMhaOwJgeLqXUrmA8JJmkzWrUM4Ope0nyt8OPUXHAvFydWp4Lr4XwamdP4hCaFt+fj4+
      Pj44ODhga2uLh4cHGRkZjfOzs7OZMWMGtra2vPTSSxQV/Ykn9Hagdl8Bxo6FHZ8k0xlDmnWa
      f/BSwFkU/4okUaslds9rPHzlt04oWfizKioq8PT0JC4ujsTERJYtW8a2bdvQ6XRcvnyZrVu3
      smTJEhISEpg8eTIffPABen3nD4xvdwAsPBfiejyco3f87TanCVl7lNErgllsbYYR0L2/kmcc
      Le50wcJtsLa2xsnJiR49etCtWzdGjx6Nubk5er2eM2fOMHDgQMaPH4+RkRFTpkzhnnvu4eLF
      i51ez/bfAxjZMn16Ljv3Zt9gpp6cCH+mOSkbHn8RRLIOIJUNEyawIbVhsdQNTFAqCTjWcAYo
      j8DHYRWa5ieE/FNoy8fiaHfjEUlZn3jh1vAIDge1Byujr771qtmjO5QOqD3eJabh3VRNj+ZQ
      4qCeS1Cy7uoMIvynGR4FonTC1euT67sEC7ekvr6egoICgoKCeOSRRzAzM0On02FpaUm3bobD
      r2fPnlhaWlJRUdHp9euQm+BRc15lxP4wNNc0x/WpQbweoyA4VotWG88O9SmWvRfNZRRMmAza
      0zkA5GecwtrNjczU0wBcTkrglKtLy1fmVFdRSX9u/F64KowVfuyM+hatVkv8JkfSVu8gASB7
      L+uOWbMp3lCHyHVTGGioHEGvx6AIjjV8ZoeaU8veI/oyVMduJ7B2PpGJWrSJ0YS+psC4I3aU
      zMTExDS28RUKBbNmzQKgsrKS++9v+YbLK1euUFZ2t44JNnFh5sRNfHS4BNWDTZOzEzUUpxTx
      nOP7TRMtiykDrOycuLA3jXKvv6BNNMVxtQv3+ySSiRVlSQk42q1pWTnjnvSilF/KgetCcB/d
      yw4R4O9DekXjG6oM9yUWQxlR9h7vvlHBX50nM97ZhtF9gcxENMUpFD3nSFPtLCkuA+NhDzM4
      +QOWvp3HxKecULmMZViH7Ch5mThxIlqtloqKCo4ePcr69evx8/OjV69eXLp0qcWyPXr0wNz8
      rh0TbIRinhfs+pTUa+5jTD22kajVor36FzafIYCRwg7HlASSdKc5qbNHOUCB3bAMfiw/TdK3
      Y3G0u2Z86JDRjDU9RULSDW42yiNZ82YG9luiDWVFLKHxFVUmk/hn7Ke8M3kkVcnbWfL8dIKu
      VtLUg22JzeqmNYxWYtSrfB4ZzCLbnpw78h7zJvkSWXJ9scKtMTMzY9asWdTV1XHu3DlMTU3J
      ysqivr4egKqqKrKysjAzM+v0unXc7wAD3JlhdZDPopq+lRllMw4it7IjrQI9oK8sIuP7TMoB
      TOxwtEkgaUcyeY42DMEEqycrSdgZg2a4M+OvO8sreNXfkYQtAYQ2rK+mVMvXCYVQXU0l5vQb
      0B2jmlIyEtJp/FItS8ORHGMemzwf33VbeP3JYk6dLYFRNowjkq070qgwVI6ijO/JLIfy1K9J
      0g3G5oVFvLd5Fc/10ZL+U4ftKVnYv38/mZmZ1NbWUl9fT0ZGBj/99BO9e/fm8ccf5+LFi3z3
      3Xfo9XoOHjyIJEkMHDiw0+vZgT+EmTBpwRxy4080TjGyfY3Ni/px3M8Ne6USJ7clbMuoamhP
      90VpP5yo8EhGPGF4Q5qFtS3Z+/Zh6mR/w3dGmT7zL/a/NZD4t6Zir1TiMmcbP/XoAxbP4v18
      Pptc7XF6YTXfVJnR7+qHjKtI2TSfSfZKlPZT+eiP2Sx+1gKMbHlt8yL6HffDzV6J0smNJdsy
      qDIGYwrZ+/ZUnlIqUT7lR4KlP7NtO25PyYG5uTmBgYGMGzcOe3t7Vq9ezcKFCxk8eDAmJiYs
      XryY4OBgHB0diY2NxdfXFyMjMSZYEDqV6AohyJoIgCBrIgCCrIkACLLW5m13ZWVlZ9RDELqE
      uAIIsiYCIMiaCIAgayIAgqy1IwAXCPNWoVL9HxGlzSafWIvKO4wL7a5aa+U1/LlOxWdjPMV1
      HV5QY1lrT7S9pPDn1dfXk5iYyJw5c3B2dsbd3Z2DBw82do7rTO2+AowZA5/sSeWOHIc3MClQ
      g0ajISZsFTa5a5n9Wni7w3ZirQrvsI6PrHBjWVlZHD58mNWrV3Ps2DG2b99OfHw8ubm5nV6X
      dgfgwRkvM0ETQewdHxLZUvd+T+IV6I/d+X/zZWpnxU/oCJaWlqxZs4YRI0bQrVs3Bg0ahEKh
      oLq6utPr0gFDIhU8OyWP3V+eu8HMOvIiA3jRVYVK5YLbK1tJ1QGkscXdnS1pDYulbcFdpeLd
      +IYDuTySN1zWcqKt49rUhUkqHafPFDQUl0dkwIu4qlSoXNx4ZWtqw5vLy4kLfImprobmk+tU
      Pz49W8nVps7yaDi3Y46hadWs3VOcvIuAOW64qFS4Lg4nr+7abVLhOtWHPTfadKFV3bp1axwO
      CXD+/Hlyc3MZOnRo59elI1YycpY3Dx/8ghPX/GZWl/Yh/nFj2XhYg0ZzhC1O6SzfEEsl1qie
      hpM/5AFwITOdMZMmcfZUOgCVqUn8MMEZ+3vbKvlejIwgt6AQqCPtQ3/ixm7ksEaD5sgWnNKX
      syHWUKkH3Fay57AGjeY44QuM2Bl0iIsMZnaIhsBJMPLVPWg0GjQB45pW38ee1z8+SGzMhzz7
      y8eEpwDVcYS8X4tn+HE0muMc+PgVxvbogJ0oQ/X19Rw4cIB9+/bh6+uLiUnnvySvYzpg93Jm
      ujqYkCOljHugafK5lBOUphbz4sTgpokjDUMixygd+Hnfacrn9SYtpTd2f3fG5I0UzjKG8pQk
      7Gzeoc3jnzr0ehg2zAI4R8qJUlKLX6RlcWVAH/Q/hOCzPJELf9Q2zLBq81EuD4x6jAG9APpg
      1rsWXR1gPJhhg1LZ/uYK8p2dGDf+Kcbc+OW3wk1UV1fz0Ucf8eijj/LWW2+1uCJ0pg4agXAv
      1i/OhYV7SfNtOcd0WhCRforrD2ZrG+yWx5Gq68OpP2x4ub81PYfuI6s8nbzvn8BuUa+2i62M
      I0ZjipX7Q8A5wJRpQZH4Ka4pLW0Lb+/tztLdR3i6X3fDN1W7bndbR+K1+3PsT37L90e/YX1o
      EBZL97DRrf/trlB26uvrCQ0NxdnZGWtr6y6tS8fFrv9knnsiin3RvzdOGqmwh6iPCUn/lTqg
      rrKEzOSzhiGRvRTYPZlEyiepXLBTMJhejLaqIunTOE4MdcLhhk9/aFLzy0nCVgaT8MQrzFHc
      C4zEUFwI6b/WAXVUlmSSfLYcrlRT1cuMAX/pTl1lPgnJOS3W1et+U0rOn+fXOqira+PGozyN
      o9o/eOjJ6XivXMfyZ/uQlpFz888ILeTm5lJfX4+VlVVXV6Ujfwjrhcu8WeR9l9g45V7FAtZ5
      maNZ7oFapcJ1xjJ2ZlbRE4C+WNsMJToiiuGPjwRgoJWC8199RW8HG1o7n0YvN9x8Tpy9gdRh
      voS9P7Vh2XtRLFiHl7mG5R5qVCpXZizbSWZVT7CZycIH/4PvRBemLP03RT1apsv6OR+szq5j
      qlrF5KCTN9/MnnDxy5XMmqxCpZrM8qSRvD7T5vZ2mUwVFhYSHh6Os7Nz0+86KhXHjx/v9Lq0
      OSRS9AYV/peJrhCCrP0/M4wWQ/DUhdYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Timeline series Asia' width='192'>
      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
      GmcCcIZTjf8fBrg78lFTbHEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
